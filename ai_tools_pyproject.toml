[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai_tools"
version = "1.0.0"
description = "A comprehensive AI library for LLM providers, embeddings, vector stores, and tools"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MPC Markets", email = "dev@mpcmarkets.com"}
]
maintainers = [
    {name = "MPC Markets", email = "dev@mpcmarkets.com"}
]
keywords = ["ai", "llm", "embeddings", "vector-store", "machine-learning", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "pydantic>=1.10.0",
    "typing-extensions>=4.0.0",
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.3.0",
    "langchain-core>=0.3.0",
    "faiss-cpu>=1.7.0",
    "beautifulsoup4>=4.11.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.urls]
Homepage = "https://github.com/mpcmarkets/ai_tools"
Documentation = "https://github.com/mpcmarkets/ai_tools#readme"
Repository = "https://github.com/mpcmarkets/ai_tools.git"
Issues = "https://github.com/mpcmarkets/ai_tools/issues"

[project.scripts]
ai-tools = "ai_tools.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_tools*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ai_tools",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
